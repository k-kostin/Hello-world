#!/usr/bin/env python3
"""
–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Ä—Ç —Å —Ü–µ–Ω–∞–º–∏ –Ω–∞ —Ç–æ–ø–ª–∏–≤–æ.
–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML –∫–∞—Ä—Ç—É –Ω–∞ –æ—Å–Ω–æ–≤–µ folium —Å –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—ã–º–∏ —Å–ª–æ—è–º–∏ —Ç–æ–ø–ª–∏–≤–∞.
"""

import sys
import subprocess
from pathlib import Path

def install_dependencies():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏."""
    print("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        subprocess.check_call([sys.executable, "-m", "pip", "install", 
                             "folium", "branca", "pandas", "--break-system-packages"])
        print("–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return True
    except subprocess.CalledProcessError as e:
        print(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {e}")
        return False

def run_map_generation():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–∞—Ä—Ç."""
    print("\n" + "="*50)
    print("–°–û–ó–î–ê–ù–ò–ï –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–û–ô –ö–ê–†–¢–´")
    print("="*50)
    
    try:
        subprocess.check_call([sys.executable, "visualizations/fuel_price_map.py"])
        return True
    except subprocess.CalledProcessError as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç—ã: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–∞—Ä—Ç —Å —Ü–µ–Ω–∞–º–∏ –Ω–∞ —Ç–æ–ø–ª–∏–≤–æ (–æ–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    required_files = [
        "regional_prices_20250707_145425.json"
    ]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º geojson —Ñ–∞–π–ª –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
    geojson_paths = [
        "data/geojson/russia_reg v2.geojson",
        "src/russia_reg v2.geojson"
    ]
    
    geojson_found = False
    for geojson_path in geojson_paths:
        if Path(geojson_path).exists():
            geojson_found = True
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª –≥—Ä–∞–Ω–∏—Ü: {geojson_path}")
            break
    
    if not geojson_found:
        print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª —Å –≥—Ä–∞–Ω–∏—Ü–∞–º–∏ —Ä–µ–≥–∏–æ–Ω–æ–≤!")
        print("–û–∂–∏–¥–∞–µ–º—ã–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è:")
        for path in geojson_paths:
            print(f"  - {path}")
        return False
    
    missing_files = []
    for file_path in required_files:
        if not Path(file_path).exists():
            missing_files.append(file_path)
    
    if missing_files:
        print("‚ùå –û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã:")
        for file_path in missing_files:
            print(f"  - {file_path}")
        print("\n–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª —Å —Ü–µ–Ω–∞–º–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞")
        return False
    
    print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if not install_dependencies():
        return False
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É
    if not run_map_generation():
        return False
    
    print("\n" + "="*60)
    print("üéâ –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–û!")
    print("="*60)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
    maps_dir = Path("data/maps")
    if maps_dir.exists():
        print("\nüìç –°–æ–∑–¥–∞–Ω–Ω–∞—è –∫–∞—Ä—Ç–∞:")
        map_file = maps_dir / "fuel_price_interactive_map.html"
        if map_file.exists():
            print(f"   {map_file}")
            print(f"üåê –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: file://{map_file.absolute()}")
            print("\nüîß –§—É–Ω–∫—Ü–∏–∏ –∫–∞—Ä—Ç—ã:")
            print("   ‚Ä¢ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≤–∏–¥–∞–º–∏ —Ç–æ–ø–ª–∏–≤–∞ —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Å–ª–æ—ë–≤")
            print("   ‚Ä¢ –ü–æ–∏—Å–∫ —Ä–µ–≥–∏–æ–Ω–æ–≤ –≤ –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É")
            print("   ‚Ä¢ –ö–ª–∏–∫ –Ω–∞ —Ä–µ–≥–∏–æ–Ω –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ü–µ–Ω")
            print("   ‚Ä¢ –°—Ç–∞–±–∏–ª—å–Ω—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–∏")
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)