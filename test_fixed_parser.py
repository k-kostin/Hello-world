#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞
"""
import sys
from pathlib import Path
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent))

from src.parsers.russiabase_parser import RussiaBaseRegionalParser

def setup_logging():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    logging.basicConfig(
        level=logging.DEBUG,
        format='%(asctime)s | %(levelname)s | %(name)s | %(message)s',
        handlers=[
            logging.StreamHandler(sys.stdout),
            logging.FileHandler('parser_debug.log', encoding='utf-8')
        ]
    )

def test_single_region():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ –æ–¥–Ω–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –æ—Ç–ª–∞–¥–∫–æ–π"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞")
    print("=" * 60)
    
    parser = RussiaBaseRegionalParser()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ú–æ—Å–∫–≤—É (ID: 77)
    region_id = 77
    region_name = "–ú–æ—Å–∫–≤–∞"
    
    print(f"üó∫Ô∏è –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏–æ–Ω: {region_name} (ID: {region_id})")
    print("=" * 60)
    
    result = parser.get_region_prices(region_id, region_name)
    
    if result:
        print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –î–õ–Ø –†–ï–ì–ò–û–ù–ê: {result.region_name}")
        print(f"üÜî ID —Ä–µ–≥–∏–æ–Ω–∞: {result.region_id}")
        print(f"üîó URL: {result.url}")
        print(f"‚è∞ –í—Ä–µ–º—è: {result.timestamp}")
        print(f"üìä –°—Ç–∞—Ç—É—Å: {result.status}")
        
        if result.fuel_prices:
            print(f"\nüí∞ –ù–ê–ô–î–ï–ù–ù–´–ï –¶–ï–ù–´:")
            for fuel_type, price in result.fuel_prices.items():
                print(f"  {fuel_type:10}: {price:.2f} —Ä—É–±/–ª")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ü–µ–Ω—ã
            suspicious_prices = [92.0, 95.0, 98.0, 100.0]
            if any(price in suspicious_prices for price in result.fuel_prices.values()):
                print(f"\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ü–µ–Ω—ã!")
                print(f"–í–æ–∑–º–æ–∂–Ω–æ, –ø–∞—Ä—Å–µ—Ä –∏–∑–≤–ª–µ–∫–∞–µ—Ç –Ω–æ–º–µ—Ä–∞ —Ç–æ–ø–ª–∏–≤–∞ –≤–º–µ—Å—Ç–æ —Ü–µ–Ω")
            else:
                print(f"\n‚úÖ –¶–µ–Ω—ã –≤—ã–≥–ª—è–¥—è—Ç —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ")
        else:
            print(f"\n‚ùå –¶–µ–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    else:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ —Ä–µ–≥–∏–æ–Ω–∞")

def test_multiple_regions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤"""
    print("\n" + "=" * 60)
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤")
    print("=" * 60)
    
    parser = RussiaBaseRegionalParser()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤
    test_regions = [
        {'id': 77, 'name': '–ú–æ—Å–∫–≤–∞'},
        {'id': 78, 'name': '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥'},
        {'id': 23, 'name': '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π'},
    ]
    
    results = []
    
    for region in test_regions:
        print(f"\nüîÑ –ü–∞—Ä—Å–∏–Ω–≥: {region['name']} (ID: {region['id']})")
        
        result = parser.get_region_prices(region['id'], region['name'])
        if result:
            results.append(result)
        
        # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        import time
        time.sleep(2)
    
    # –í—ã–≤–æ–¥–∏–º —Å–≤–æ–¥–∫—É
    print(f"\nüìä –°–í–û–î–ö–ê –ü–û –†–ï–ó–£–õ–¨–¢–ê–¢–ê–ú")
    print("=" * 60)
    
    successful_count = 0
    suspicious_count = 0
    
    for result in results:
        if result.fuel_prices:
            successful_count += 1
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ü–µ–Ω—ã
            suspicious_prices = [92.0, 95.0, 98.0, 100.0]
            if any(price in suspicious_prices for price in result.fuel_prices.values()):
                suspicious_count += 1
                status = "‚ö†Ô∏è –ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–û"
            else:
                status = "‚úÖ –û–ö"
            
            print(f"{result.region_name:20} | {len(result.fuel_prices)} –≤–∏–¥–æ–≤ —Ç–æ–ø–ª–∏–≤–∞ | {status}")
        else:
            print(f"{result.region_name:20} | –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö | ‚ùå –û–®–ò–ë–ö–ê")
    
    print(f"\n–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"  –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {successful_count}/{len(test_regions)}")
    print(f"  –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {suspicious_count}")
    
    if suspicious_count > 0:
        print(f"\n‚ö†Ô∏è –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–∞–ª—å–Ω–µ–π—à–∞—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞")
        print(f"–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ü–µ–Ω—ã —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö")
    else:
        print(f"\n‚úÖ –£–°–ü–ï–•: –ü–∞—Ä—Å–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    setup_logging()
    
    try:
        test_single_region()
        test_multiple_regions()
        
        print(f"\nüìù –î–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: parser_debug.log")
        
    except KeyboardInterrupt:
        print(f"\n‚ö†Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\nüí• –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()